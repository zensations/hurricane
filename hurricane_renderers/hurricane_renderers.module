<?php
/**
 * @file
 * adds additional renderers to Hurricane
 */

/**
 * Implements hook_requirements().
 */
function hurricane_renderes_requirements($phase) {
  $requirements = array();
  if ($phase == 'runtime' && !file_exists(libraries_get_path('raphael') . '/raphael.js')) {
    $requirements['hurricane_renderers'] = array(
      'title' => t('Raphael library not found'),
      'value' => t('The !raphael javascript library was not found. Please !download it into the libraries folder.', array(
        '!leaflet' => l(t('Raphael'), 'http://raphaeljs.com'),
        '!download' => l(t('download'), 'http://raphaeljs.com'),
      )),
      'severity' => REQUIREMENT_ERROR,
    );
  }
  return $requirements;
}

/**
 * Implements hook_hurricane_renderers().
 */
function hurricane_renderers_hurricane_renderers() {
  $path = drupal_get_path('module', 'hurricane_renderers');
  return array(
    'hurricane' => array(
      'label' => t('Hurricane'),
      'js' => array(
        $path . '/hurricane_raphael.js' => array('group' => JS_LIBRARY),
        $path . '/hurricane.js' => array(),
      ),
      'dependencies' => array(
        array('hurricane_renderers', 'raphael'),
      ),
      'parameters' => array(
        'color' => array('label' => t('Color'), 'default' => '#3182c5'),
        'letter-spacing' => array('label' => t('Lines'), 'default' => 15),
        'line-height' => array('label' => t('Length'), 'default' => 60),
        'font-size' => array('label' => t('Thickness'), 'default' => 50),
        'text-indent' => array('label' => t('Corners'), 'default' => 100),
        'word-spacing' => array('label' => t('Speed'), 'default' => 20),
        'font-weight' => array('label' => t('Trail'), 'default' => 5),
      ),
    ),
    'twister' => array(
      'label' => t('Twister'),
      'js' => array(
        $path . '/hurricane_raphael.js' => array('group' => JS_LIBRARY),
        $path . '/twister.js' => array(),
      ),
      'dependencies' => array(
        array('hurricane_renderers', 'raphael'),
      ),
      'parameters' => array(
        'color' => array('label' => t('Active'), 'default' => '#3182c5'),
        'background-color' => array('label' => t('Inactive'), 'default' => '#CCC'),
        'word-spacing' => array('label' => t('Pulse'), 'default' => '25'),
        'letter-spacing' => array('label' => t('Rotate'), 'default' => '25'),
        'font-weight' => array('label' => t('Shape'), 'default' => '1'),
        'line-height' => array('label' => t('Speed'), 'default' => 50),
      ),
    ),
  );
}

/**
 * Implements hook_library_info().
 */
function hurricane_renderers_library() {
  $library = array();
  $library['raphael'] = array(
    'title' => t('Hurricane Raphael'),
    'website' => '',
    'version' => '0.1',
    'js' => array(
      libraries_get_path('raphael') . '/raphael.js' => array(),
    ),
  );
  return $library;
}

/**
 * Implements hook_libraries_info().
 */
function hurricane_libraries_info() {
  $libraries = array(
    'raphael' => array(
      'name' => 'RaphaÃ«l',
      'vendor url' => 'http://raphaeljs.com/',
      'download url' => 'http://raphaeljs.com/',
      'version arguments' => array(
        'file' => 'history.md',
        'pattern' => '/^([0-9a-zA-Z.-]+)\ /',
      ),
      'files' => array(
        'js' => array(
          'raphael.js' => array(
            'group' => JS_LIBRARY,
            'weight' => -100,
          ),
        ),
      ),
      'variants' => array(
        'minified' => array(
          'js' => array(
            'raphael-min.js',
          ),
        ),
      ),
    ),
  );
  return $libraries;
}

